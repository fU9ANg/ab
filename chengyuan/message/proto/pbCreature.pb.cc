// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/pbCreature.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "proto/pbCreature.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* pbCreatureClient_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  pbCreatureClient_reflection_ = NULL;
const ::google::protobuf::Descriptor* pbCreatureDB_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  pbCreatureDB_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_proto_2fpbCreature_2eproto() {
  protobuf_AddDesc_proto_2fpbCreature_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "proto/pbCreature.proto");
  GOOGLE_CHECK(file != NULL);
  pbCreatureClient_descriptor_ = file->message_type(0);
  static const int pbCreatureClient_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(pbCreatureClient, posx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(pbCreatureClient, buffs_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(pbCreatureClient, base_),
  };
  pbCreatureClient_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      pbCreatureClient_descriptor_,
      pbCreatureClient::default_instance_,
      pbCreatureClient_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(pbCreatureClient, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(pbCreatureClient, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(pbCreatureClient));
  pbCreatureDB_descriptor_ = file->message_type(1);
  static const int pbCreatureDB_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(pbCreatureDB, posy_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(pbCreatureDB, buffs_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(pbCreatureDB, base_),
  };
  pbCreatureDB_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      pbCreatureDB_descriptor_,
      pbCreatureDB::default_instance_,
      pbCreatureDB_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(pbCreatureDB, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(pbCreatureDB, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(pbCreatureDB));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_proto_2fpbCreature_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    pbCreatureClient_descriptor_, &pbCreatureClient::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    pbCreatureDB_descriptor_, &pbCreatureDB::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_proto_2fpbCreature_2eproto() {
  delete pbCreatureClient::default_instance_;
  delete pbCreatureClient_reflection_;
  delete pbCreatureDB::default_instance_;
  delete pbCreatureDB_reflection_;
}

void protobuf_AddDesc_proto_2fpbCreature_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::protobuf_AddDesc_proto_2fpbBuffer_2eproto();
  ::protobuf_AddDesc_proto_2fpbCreate_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\026proto/pbCreature.proto\032\024proto/pbBuffer"
    ".proto\032\024proto/pbCreate.proto\"_\n\020pbCreatu"
    "reClient\022\014\n\004PosX\030\001 \002(\005\022\036\n\005Buffs\030\002 \003(\0132\017."
    "pbBufferClient\022\035\n\004base\030\003 \002(\0132\017.pbCreateC"
    "lient\"S\n\014pbCreatureDB\022\014\n\004PosY\030\001 \002(\005\022\032\n\005B"
    "uffs\030\002 \003(\0132\013.pbBufferDB\022\031\n\004base\030\003 \002(\0132\013."
    "pbCreateDB", 250);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "proto/pbCreature.proto", &protobuf_RegisterTypes);
  pbCreatureClient::default_instance_ = new pbCreatureClient();
  pbCreatureDB::default_instance_ = new pbCreatureDB();
  pbCreatureClient::default_instance_->InitAsDefaultInstance();
  pbCreatureDB::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_proto_2fpbCreature_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_proto_2fpbCreature_2eproto {
  StaticDescriptorInitializer_proto_2fpbCreature_2eproto() {
    protobuf_AddDesc_proto_2fpbCreature_2eproto();
  }
} static_descriptor_initializer_proto_2fpbCreature_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int pbCreatureClient::kPosXFieldNumber;
const int pbCreatureClient::kBuffsFieldNumber;
const int pbCreatureClient::kBaseFieldNumber;
#endif  // !_MSC_VER

pbCreatureClient::pbCreatureClient()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void pbCreatureClient::InitAsDefaultInstance() {
  base_ = const_cast< ::pbCreateClient*>(&::pbCreateClient::default_instance());
}

pbCreatureClient::pbCreatureClient(const pbCreatureClient& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void pbCreatureClient::SharedCtor() {
  _cached_size_ = 0;
  posx_ = 0;
  base_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

pbCreatureClient::~pbCreatureClient() {
  SharedDtor();
}

void pbCreatureClient::SharedDtor() {
  if (this != default_instance_) {
    delete base_;
  }
}

void pbCreatureClient::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* pbCreatureClient::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return pbCreatureClient_descriptor_;
}

const pbCreatureClient& pbCreatureClient::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_proto_2fpbCreature_2eproto();
  return *default_instance_;
}

pbCreatureClient* pbCreatureClient::default_instance_ = NULL;

pbCreatureClient* pbCreatureClient::New() const {
  return new pbCreatureClient;
}

void pbCreatureClient::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    posx_ = 0;
    if (has_base()) {
      if (base_ != NULL) base_->::pbCreateClient::Clear();
    }
  }
  buffs_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool pbCreatureClient::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 PosX = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &posx_)));
          set_has_posx();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_Buffs;
        break;
      }

      // repeated .pbBufferClient Buffs = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_Buffs:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_buffs()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_Buffs;
        if (input->ExpectTag(26)) goto parse_base;
        break;
      }

      // required .pbCreateClient base = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_base:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_base()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void pbCreatureClient::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 PosX = 1;
  if (has_posx()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->posx(), output);
  }

  // repeated .pbBufferClient Buffs = 2;
  for (int i = 0; i < this->buffs_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->buffs(i), output);
  }

  // required .pbCreateClient base = 3;
  if (has_base()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->base(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* pbCreatureClient::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 PosX = 1;
  if (has_posx()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->posx(), target);
  }

  // repeated .pbBufferClient Buffs = 2;
  for (int i = 0; i < this->buffs_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->buffs(i), target);
  }

  // required .pbCreateClient base = 3;
  if (has_base()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->base(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int pbCreatureClient::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 PosX = 1;
    if (has_posx()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->posx());
    }

    // required .pbCreateClient base = 3;
    if (has_base()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->base());
    }

  }
  // repeated .pbBufferClient Buffs = 2;
  total_size += 1 * this->buffs_size();
  for (int i = 0; i < this->buffs_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->buffs(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void pbCreatureClient::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const pbCreatureClient* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const pbCreatureClient*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void pbCreatureClient::MergeFrom(const pbCreatureClient& from) {
  GOOGLE_CHECK_NE(&from, this);
  buffs_.MergeFrom(from.buffs_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_posx()) {
      set_posx(from.posx());
    }
    if (from.has_base()) {
      mutable_base()->::pbCreateClient::MergeFrom(from.base());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void pbCreatureClient::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void pbCreatureClient::CopyFrom(const pbCreatureClient& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool pbCreatureClient::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000005) != 0x00000005) return false;

  for (int i = 0; i < buffs_size(); i++) {
    if (!this->buffs(i).IsInitialized()) return false;
  }
  if (has_base()) {
    if (!this->base().IsInitialized()) return false;
  }
  return true;
}

void pbCreatureClient::Swap(pbCreatureClient* other) {
  if (other != this) {
    std::swap(posx_, other->posx_);
    buffs_.Swap(&other->buffs_);
    std::swap(base_, other->base_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata pbCreatureClient::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = pbCreatureClient_descriptor_;
  metadata.reflection = pbCreatureClient_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int pbCreatureDB::kPosYFieldNumber;
const int pbCreatureDB::kBuffsFieldNumber;
const int pbCreatureDB::kBaseFieldNumber;
#endif  // !_MSC_VER

pbCreatureDB::pbCreatureDB()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void pbCreatureDB::InitAsDefaultInstance() {
  base_ = const_cast< ::pbCreateDB*>(&::pbCreateDB::default_instance());
}

pbCreatureDB::pbCreatureDB(const pbCreatureDB& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void pbCreatureDB::SharedCtor() {
  _cached_size_ = 0;
  posy_ = 0;
  base_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

pbCreatureDB::~pbCreatureDB() {
  SharedDtor();
}

void pbCreatureDB::SharedDtor() {
  if (this != default_instance_) {
    delete base_;
  }
}

void pbCreatureDB::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* pbCreatureDB::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return pbCreatureDB_descriptor_;
}

const pbCreatureDB& pbCreatureDB::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_proto_2fpbCreature_2eproto();
  return *default_instance_;
}

pbCreatureDB* pbCreatureDB::default_instance_ = NULL;

pbCreatureDB* pbCreatureDB::New() const {
  return new pbCreatureDB;
}

void pbCreatureDB::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    posy_ = 0;
    if (has_base()) {
      if (base_ != NULL) base_->::pbCreateDB::Clear();
    }
  }
  buffs_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool pbCreatureDB::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 PosY = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &posy_)));
          set_has_posy();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_Buffs;
        break;
      }

      // repeated .pbBufferDB Buffs = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_Buffs:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_buffs()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_Buffs;
        if (input->ExpectTag(26)) goto parse_base;
        break;
      }

      // required .pbCreateDB base = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_base:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_base()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void pbCreatureDB::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 PosY = 1;
  if (has_posy()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->posy(), output);
  }

  // repeated .pbBufferDB Buffs = 2;
  for (int i = 0; i < this->buffs_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->buffs(i), output);
  }

  // required .pbCreateDB base = 3;
  if (has_base()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->base(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* pbCreatureDB::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 PosY = 1;
  if (has_posy()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->posy(), target);
  }

  // repeated .pbBufferDB Buffs = 2;
  for (int i = 0; i < this->buffs_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->buffs(i), target);
  }

  // required .pbCreateDB base = 3;
  if (has_base()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->base(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int pbCreatureDB::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 PosY = 1;
    if (has_posy()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->posy());
    }

    // required .pbCreateDB base = 3;
    if (has_base()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->base());
    }

  }
  // repeated .pbBufferDB Buffs = 2;
  total_size += 1 * this->buffs_size();
  for (int i = 0; i < this->buffs_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->buffs(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void pbCreatureDB::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const pbCreatureDB* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const pbCreatureDB*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void pbCreatureDB::MergeFrom(const pbCreatureDB& from) {
  GOOGLE_CHECK_NE(&from, this);
  buffs_.MergeFrom(from.buffs_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_posy()) {
      set_posy(from.posy());
    }
    if (from.has_base()) {
      mutable_base()->::pbCreateDB::MergeFrom(from.base());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void pbCreatureDB::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void pbCreatureDB::CopyFrom(const pbCreatureDB& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool pbCreatureDB::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000005) != 0x00000005) return false;

  for (int i = 0; i < buffs_size(); i++) {
    if (!this->buffs(i).IsInitialized()) return false;
  }
  if (has_base()) {
    if (!this->base().IsInitialized()) return false;
  }
  return true;
}

void pbCreatureDB::Swap(pbCreatureDB* other) {
  if (other != this) {
    std::swap(posy_, other->posy_);
    buffs_.Swap(&other->buffs_);
    std::swap(base_, other->base_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata pbCreatureDB::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = pbCreatureDB_descriptor_;
  metadata.reflection = pbCreatureDB_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)

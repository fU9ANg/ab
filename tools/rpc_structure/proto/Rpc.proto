
package RPCS;

/*
 * * * * * * * * * * * * * * * * * * * * * * * * * *
 * * * * * * * SERVER RPCs DEFINITIONS * * * * * * *
 * * * * * * * * * * * * * * * * * * * * * * * * * *
 */

// Server-RPC: EquipEquipment
message SRPCEquipEquipmentArg
{
    required int32 itempos= 1;
}
message SRPCEquipEquipmentRlt
{
    required int32 rs     = 1;
}

// Server-RPC: UnEquipEquipment
message SRPCUnEquipEquipmentArg
{
    required int32 pos    = 1;
}
message SRPCUnEquipEquipmentRlt
{
    required int32 rs     = 1;
}

// Server-RPC: SellItem
message SRPCSellItemArg
{
    required int32 itempos= 1;
}
message SRPCSellItemRlt
{
    required int32 money  = 1;
    required int32 badge  = 2;
    //required IntInt item  = 3;
}

// Server-RPC: UseItem
message SRPCUseItemArg
{
    required int32 pos    = 1;
}
message SRPCUseItemRlt
{
    required int32 rs     = 1;
    //repeated ResourceBase resources = 2;
}

// Server-RPC: ComposeItem
message SRPCComposeItemArg
{
    required int32 type   = 1;
    repeated int32 indexs = 2;
}
message SRPCComposeItemRlt
{
    required int32 rs     = 1;
}

// Server-RPC: SortItem
message SRPCSortItemsArg
{
}
message SRPCSortItemsRlt
{
}


/*
 * * * * * * * * * * * * * * * * * * * * * * * * * *
 * * * * * * * CLIENT RPCs DEFINITIONS * * * * * * *
 * * * * * * * * * * * * * * * * * * * * * * * * * *
 */

// Client-RPC: UpdateOneBagItem
message CRPCUpdateOneBagItem
{
    required int32  pos     = 1;
    //required ItemSerializeClient item = 2;
}

// Client-RPC: UpdateOneEquipedItem
message CRPCUpdateOneEquipedItem
{
    required int32  pos     = 1;
    //required ItemSerializeClient item = 2;
}

// Client-RPC: UpdateBagItems
message CRPCUpdateBagItems
{
    required int32  pos     = 1;
    //repeated ItemSerializeClient item = 2;
}

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/pbBuffer.proto

#ifndef PROTOBUF_proto_2fpbBuffer_2eproto__INCLUDED
#define PROTOBUF_proto_2fpbBuffer_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_proto_2fpbBuffer_2eproto();
void protobuf_AssignDesc_proto_2fpbBuffer_2eproto();
void protobuf_ShutdownFile_proto_2fpbBuffer_2eproto();

class pbBufferClient;
class pbBufferDB;

// ===================================================================

class pbBufferClient : public ::google::protobuf::Message {
 public:
  pbBufferClient();
  virtual ~pbBufferClient();

  pbBufferClient(const pbBufferClient& from);

  inline pbBufferClient& operator=(const pbBufferClient& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const pbBufferClient& default_instance();

  void Swap(pbBufferClient* other);

  // implements Message ----------------------------------------------

  pbBufferClient* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const pbBufferClient& from);
  void MergeFrom(const pbBufferClient& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 Id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // required int64 StartTime = 2;
  inline bool has_starttime() const;
  inline void clear_starttime();
  static const int kStartTimeFieldNumber = 2;
  inline ::google::protobuf::int64 starttime() const;
  inline void set_starttime(::google::protobuf::int64 value);

  // repeated int32 Times = 3;
  inline int times_size() const;
  inline void clear_times();
  static const int kTimesFieldNumber = 3;
  inline ::google::protobuf::int32 times(int index) const;
  inline void set_times(int index, ::google::protobuf::int32 value);
  inline void add_times(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      times() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_times();

  // @@protoc_insertion_point(class_scope:pbBufferClient)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_starttime();
  inline void clear_has_starttime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 starttime_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > times_;
  ::google::protobuf::int32 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_proto_2fpbBuffer_2eproto();
  friend void protobuf_AssignDesc_proto_2fpbBuffer_2eproto();
  friend void protobuf_ShutdownFile_proto_2fpbBuffer_2eproto();

  void InitAsDefaultInstance();
  static pbBufferClient* default_instance_;
};
// -------------------------------------------------------------------

class pbBufferDB : public ::google::protobuf::Message {
 public:
  pbBufferDB();
  virtual ~pbBufferDB();

  pbBufferDB(const pbBufferDB& from);

  inline pbBufferDB& operator=(const pbBufferDB& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const pbBufferDB& default_instance();

  void Swap(pbBufferDB* other);

  // implements Message ----------------------------------------------

  pbBufferDB* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const pbBufferDB& from);
  void MergeFrom(const pbBufferDB& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 Id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // required int64 ExpireTime = 2;
  inline bool has_expiretime() const;
  inline void clear_expiretime();
  static const int kExpireTimeFieldNumber = 2;
  inline ::google::protobuf::int64 expiretime() const;
  inline void set_expiretime(::google::protobuf::int64 value);

  // repeated int32 Times = 3;
  inline int times_size() const;
  inline void clear_times();
  static const int kTimesFieldNumber = 3;
  inline ::google::protobuf::int32 times(int index) const;
  inline void set_times(int index, ::google::protobuf::int32 value);
  inline void add_times(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      times() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_times();

  // @@protoc_insertion_point(class_scope:pbBufferDB)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_expiretime();
  inline void clear_has_expiretime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 expiretime_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > times_;
  ::google::protobuf::int32 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_proto_2fpbBuffer_2eproto();
  friend void protobuf_AssignDesc_proto_2fpbBuffer_2eproto();
  friend void protobuf_ShutdownFile_proto_2fpbBuffer_2eproto();

  void InitAsDefaultInstance();
  static pbBufferDB* default_instance_;
};
// ===================================================================


// ===================================================================

// pbBufferClient

// required int32 Id = 1;
inline bool pbBufferClient::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void pbBufferClient::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void pbBufferClient::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void pbBufferClient::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 pbBufferClient::id() const {
  return id_;
}
inline void pbBufferClient::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// required int64 StartTime = 2;
inline bool pbBufferClient::has_starttime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void pbBufferClient::set_has_starttime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void pbBufferClient::clear_has_starttime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void pbBufferClient::clear_starttime() {
  starttime_ = GOOGLE_LONGLONG(0);
  clear_has_starttime();
}
inline ::google::protobuf::int64 pbBufferClient::starttime() const {
  return starttime_;
}
inline void pbBufferClient::set_starttime(::google::protobuf::int64 value) {
  set_has_starttime();
  starttime_ = value;
}

// repeated int32 Times = 3;
inline int pbBufferClient::times_size() const {
  return times_.size();
}
inline void pbBufferClient::clear_times() {
  times_.Clear();
}
inline ::google::protobuf::int32 pbBufferClient::times(int index) const {
  return times_.Get(index);
}
inline void pbBufferClient::set_times(int index, ::google::protobuf::int32 value) {
  times_.Set(index, value);
}
inline void pbBufferClient::add_times(::google::protobuf::int32 value) {
  times_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
pbBufferClient::times() const {
  return times_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
pbBufferClient::mutable_times() {
  return &times_;
}

// -------------------------------------------------------------------

// pbBufferDB

// required int32 Id = 1;
inline bool pbBufferDB::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void pbBufferDB::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void pbBufferDB::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void pbBufferDB::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 pbBufferDB::id() const {
  return id_;
}
inline void pbBufferDB::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// required int64 ExpireTime = 2;
inline bool pbBufferDB::has_expiretime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void pbBufferDB::set_has_expiretime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void pbBufferDB::clear_has_expiretime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void pbBufferDB::clear_expiretime() {
  expiretime_ = GOOGLE_LONGLONG(0);
  clear_has_expiretime();
}
inline ::google::protobuf::int64 pbBufferDB::expiretime() const {
  return expiretime_;
}
inline void pbBufferDB::set_expiretime(::google::protobuf::int64 value) {
  set_has_expiretime();
  expiretime_ = value;
}

// repeated int32 Times = 3;
inline int pbBufferDB::times_size() const {
  return times_.size();
}
inline void pbBufferDB::clear_times() {
  times_.Clear();
}
inline ::google::protobuf::int32 pbBufferDB::times(int index) const {
  return times_.Get(index);
}
inline void pbBufferDB::set_times(int index, ::google::protobuf::int32 value) {
  times_.Set(index, value);
}
inline void pbBufferDB::add_times(::google::protobuf::int32 value) {
  times_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
pbBufferDB::times() const {
  return times_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
pbBufferDB::mutable_times() {
  return &times_;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_proto_2fpbBuffer_2eproto__INCLUDED

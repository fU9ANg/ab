// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/ChenyuanTypes.proto

#ifndef PROTOBUF_proto_2fChenyuanTypes_2eproto__INCLUDED
#define PROTOBUF_proto_2fChenyuanTypes_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace ChenyuanTypes {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_proto_2fChenyuanTypes_2eproto();
void protobuf_AssignDesc_proto_2fChenyuanTypes_2eproto();
void protobuf_ShutdownFile_proto_2fChenyuanTypes_2eproto();

class PosSerializeDB;
class PosSerializeNet;
class TalentPropSerializeDB;
class TalentPropSerializeNet;
class TalentNodeSerializeDB;
class TalentNodeSerializeNet;
class PlayerSerializeDB;
class PlayerSerializeNet;
class IntIntSerializeDB;
class IntIntSerializeNet;
class ResourceSerializeDB;
class ResourceSerializeNet;
class ItemSerializeDB;
class ItemSerializeNet;

// ===================================================================

class PosSerializeDB : public ::google::protobuf::Message {
 public:
  PosSerializeDB();
  virtual ~PosSerializeDB();

  PosSerializeDB(const PosSerializeDB& from);

  inline PosSerializeDB& operator=(const PosSerializeDB& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PosSerializeDB& default_instance();

  void Swap(PosSerializeDB* other);

  // implements Message ----------------------------------------------

  PosSerializeDB* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PosSerializeDB& from);
  void MergeFrom(const PosSerializeDB& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 x = 1;
  inline bool has_x() const;
  inline void clear_x();
  static const int kXFieldNumber = 1;
  inline ::google::protobuf::int32 x() const;
  inline void set_x(::google::protobuf::int32 value);

  // required int32 y = 2;
  inline bool has_y() const;
  inline void clear_y();
  static const int kYFieldNumber = 2;
  inline ::google::protobuf::int32 y() const;
  inline void set_y(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ChenyuanTypes.PosSerializeDB)
 private:
  inline void set_has_x();
  inline void clear_has_x();
  inline void set_has_y();
  inline void clear_has_y();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 x_;
  ::google::protobuf::int32 y_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_proto_2fChenyuanTypes_2eproto();
  friend void protobuf_AssignDesc_proto_2fChenyuanTypes_2eproto();
  friend void protobuf_ShutdownFile_proto_2fChenyuanTypes_2eproto();

  void InitAsDefaultInstance();
  static PosSerializeDB* default_instance_;
};
// -------------------------------------------------------------------

class PosSerializeNet : public ::google::protobuf::Message {
 public:
  PosSerializeNet();
  virtual ~PosSerializeNet();

  PosSerializeNet(const PosSerializeNet& from);

  inline PosSerializeNet& operator=(const PosSerializeNet& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PosSerializeNet& default_instance();

  void Swap(PosSerializeNet* other);

  // implements Message ----------------------------------------------

  PosSerializeNet* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PosSerializeNet& from);
  void MergeFrom(const PosSerializeNet& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 x = 1;
  inline bool has_x() const;
  inline void clear_x();
  static const int kXFieldNumber = 1;
  inline ::google::protobuf::int32 x() const;
  inline void set_x(::google::protobuf::int32 value);

  // required int32 y = 2;
  inline bool has_y() const;
  inline void clear_y();
  static const int kYFieldNumber = 2;
  inline ::google::protobuf::int32 y() const;
  inline void set_y(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ChenyuanTypes.PosSerializeNet)
 private:
  inline void set_has_x();
  inline void clear_has_x();
  inline void set_has_y();
  inline void clear_has_y();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 x_;
  ::google::protobuf::int32 y_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_proto_2fChenyuanTypes_2eproto();
  friend void protobuf_AssignDesc_proto_2fChenyuanTypes_2eproto();
  friend void protobuf_ShutdownFile_proto_2fChenyuanTypes_2eproto();

  void InitAsDefaultInstance();
  static PosSerializeNet* default_instance_;
};
// -------------------------------------------------------------------

class TalentPropSerializeDB : public ::google::protobuf::Message {
 public:
  TalentPropSerializeDB();
  virtual ~TalentPropSerializeDB();

  TalentPropSerializeDB(const TalentPropSerializeDB& from);

  inline TalentPropSerializeDB& operator=(const TalentPropSerializeDB& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TalentPropSerializeDB& default_instance();

  void Swap(TalentPropSerializeDB* other);

  // implements Message ----------------------------------------------

  TalentPropSerializeDB* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TalentPropSerializeDB& from);
  void MergeFrom(const TalentPropSerializeDB& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 propid = 1;
  inline bool has_propid() const;
  inline void clear_propid();
  static const int kPropidFieldNumber = 1;
  inline ::google::protobuf::int32 propid() const;
  inline void set_propid(::google::protobuf::int32 value);

  // required int32 propval = 2;
  inline bool has_propval() const;
  inline void clear_propval();
  static const int kPropvalFieldNumber = 2;
  inline ::google::protobuf::int32 propval() const;
  inline void set_propval(::google::protobuf::int32 value);

  // required int32 locked = 3;
  inline bool has_locked() const;
  inline void clear_locked();
  static const int kLockedFieldNumber = 3;
  inline ::google::protobuf::int32 locked() const;
  inline void set_locked(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ChenyuanTypes.TalentPropSerializeDB)
 private:
  inline void set_has_propid();
  inline void clear_has_propid();
  inline void set_has_propval();
  inline void clear_has_propval();
  inline void set_has_locked();
  inline void clear_has_locked();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 propid_;
  ::google::protobuf::int32 propval_;
  ::google::protobuf::int32 locked_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_proto_2fChenyuanTypes_2eproto();
  friend void protobuf_AssignDesc_proto_2fChenyuanTypes_2eproto();
  friend void protobuf_ShutdownFile_proto_2fChenyuanTypes_2eproto();

  void InitAsDefaultInstance();
  static TalentPropSerializeDB* default_instance_;
};
// -------------------------------------------------------------------

class TalentPropSerializeNet : public ::google::protobuf::Message {
 public:
  TalentPropSerializeNet();
  virtual ~TalentPropSerializeNet();

  TalentPropSerializeNet(const TalentPropSerializeNet& from);

  inline TalentPropSerializeNet& operator=(const TalentPropSerializeNet& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TalentPropSerializeNet& default_instance();

  void Swap(TalentPropSerializeNet* other);

  // implements Message ----------------------------------------------

  TalentPropSerializeNet* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TalentPropSerializeNet& from);
  void MergeFrom(const TalentPropSerializeNet& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 propid = 1;
  inline bool has_propid() const;
  inline void clear_propid();
  static const int kPropidFieldNumber = 1;
  inline ::google::protobuf::int32 propid() const;
  inline void set_propid(::google::protobuf::int32 value);

  // required int32 propval = 2;
  inline bool has_propval() const;
  inline void clear_propval();
  static const int kPropvalFieldNumber = 2;
  inline ::google::protobuf::int32 propval() const;
  inline void set_propval(::google::protobuf::int32 value);

  // required int32 locked = 3;
  inline bool has_locked() const;
  inline void clear_locked();
  static const int kLockedFieldNumber = 3;
  inline ::google::protobuf::int32 locked() const;
  inline void set_locked(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ChenyuanTypes.TalentPropSerializeNet)
 private:
  inline void set_has_propid();
  inline void clear_has_propid();
  inline void set_has_propval();
  inline void clear_has_propval();
  inline void set_has_locked();
  inline void clear_has_locked();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 propid_;
  ::google::protobuf::int32 propval_;
  ::google::protobuf::int32 locked_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_proto_2fChenyuanTypes_2eproto();
  friend void protobuf_AssignDesc_proto_2fChenyuanTypes_2eproto();
  friend void protobuf_ShutdownFile_proto_2fChenyuanTypes_2eproto();

  void InitAsDefaultInstance();
  static TalentPropSerializeNet* default_instance_;
};
// -------------------------------------------------------------------

class TalentNodeSerializeDB : public ::google::protobuf::Message {
 public:
  TalentNodeSerializeDB();
  virtual ~TalentNodeSerializeDB();

  TalentNodeSerializeDB(const TalentNodeSerializeDB& from);

  inline TalentNodeSerializeDB& operator=(const TalentNodeSerializeDB& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TalentNodeSerializeDB& default_instance();

  void Swap(TalentNodeSerializeDB* other);

  // implements Message ----------------------------------------------

  TalentNodeSerializeDB* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TalentNodeSerializeDB& from);
  void MergeFrom(const TalentNodeSerializeDB& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ChenyuanTypes.TalentPropSerializeDB props = 1;
  inline int props_size() const;
  inline void clear_props();
  static const int kPropsFieldNumber = 1;
  inline const ::ChenyuanTypes::TalentPropSerializeDB& props(int index) const;
  inline ::ChenyuanTypes::TalentPropSerializeDB* mutable_props(int index);
  inline ::ChenyuanTypes::TalentPropSerializeDB* add_props();
  inline const ::google::protobuf::RepeatedPtrField< ::ChenyuanTypes::TalentPropSerializeDB >&
      props() const;
  inline ::google::protobuf::RepeatedPtrField< ::ChenyuanTypes::TalentPropSerializeDB >*
      mutable_props();

  // @@protoc_insertion_point(class_scope:ChenyuanTypes.TalentNodeSerializeDB)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::ChenyuanTypes::TalentPropSerializeDB > props_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_proto_2fChenyuanTypes_2eproto();
  friend void protobuf_AssignDesc_proto_2fChenyuanTypes_2eproto();
  friend void protobuf_ShutdownFile_proto_2fChenyuanTypes_2eproto();

  void InitAsDefaultInstance();
  static TalentNodeSerializeDB* default_instance_;
};
// -------------------------------------------------------------------

class TalentNodeSerializeNet : public ::google::protobuf::Message {
 public:
  TalentNodeSerializeNet();
  virtual ~TalentNodeSerializeNet();

  TalentNodeSerializeNet(const TalentNodeSerializeNet& from);

  inline TalentNodeSerializeNet& operator=(const TalentNodeSerializeNet& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TalentNodeSerializeNet& default_instance();

  void Swap(TalentNodeSerializeNet* other);

  // implements Message ----------------------------------------------

  TalentNodeSerializeNet* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TalentNodeSerializeNet& from);
  void MergeFrom(const TalentNodeSerializeNet& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ChenyuanTypes.TalentPropSerializeNet props = 1;
  inline int props_size() const;
  inline void clear_props();
  static const int kPropsFieldNumber = 1;
  inline const ::ChenyuanTypes::TalentPropSerializeNet& props(int index) const;
  inline ::ChenyuanTypes::TalentPropSerializeNet* mutable_props(int index);
  inline ::ChenyuanTypes::TalentPropSerializeNet* add_props();
  inline const ::google::protobuf::RepeatedPtrField< ::ChenyuanTypes::TalentPropSerializeNet >&
      props() const;
  inline ::google::protobuf::RepeatedPtrField< ::ChenyuanTypes::TalentPropSerializeNet >*
      mutable_props();

  // @@protoc_insertion_point(class_scope:ChenyuanTypes.TalentNodeSerializeNet)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::ChenyuanTypes::TalentPropSerializeNet > props_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_proto_2fChenyuanTypes_2eproto();
  friend void protobuf_AssignDesc_proto_2fChenyuanTypes_2eproto();
  friend void protobuf_ShutdownFile_proto_2fChenyuanTypes_2eproto();

  void InitAsDefaultInstance();
  static TalentNodeSerializeNet* default_instance_;
};
// -------------------------------------------------------------------

class PlayerSerializeDB : public ::google::protobuf::Message {
 public:
  PlayerSerializeDB();
  virtual ~PlayerSerializeDB();

  PlayerSerializeDB(const PlayerSerializeDB& from);

  inline PlayerSerializeDB& operator=(const PlayerSerializeDB& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerSerializeDB& default_instance();

  void Swap(PlayerSerializeDB* other);

  // implements Message ----------------------------------------------

  PlayerSerializeDB* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PlayerSerializeDB& from);
  void MergeFrom(const PlayerSerializeDB& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // required int32 roleid = 2;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleidFieldNumber = 2;
  inline ::google::protobuf::int32 roleid() const;
  inline void set_roleid(::google::protobuf::int32 value);

  // optional .ChenyuanTypes.PosSerializeDB pos = 3;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 3;
  inline const ::ChenyuanTypes::PosSerializeDB& pos() const;
  inline ::ChenyuanTypes::PosSerializeDB* mutable_pos();
  inline ::ChenyuanTypes::PosSerializeDB* release_pos();
  inline void set_allocated_pos(::ChenyuanTypes::PosSerializeDB* pos);

  // repeated int32 spelllist = 4;
  inline int spelllist_size() const;
  inline void clear_spelllist();
  static const int kSpelllistFieldNumber = 4;
  inline ::google::protobuf::int32 spelllist(int index) const;
  inline void set_spelllist(int index, ::google::protobuf::int32 value);
  inline void add_spelllist(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      spelllist() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_spelllist();

  // repeated .ChenyuanTypes.TalentNodeSerializeDB talentnodes = 5;
  inline int talentnodes_size() const;
  inline void clear_talentnodes();
  static const int kTalentnodesFieldNumber = 5;
  inline const ::ChenyuanTypes::TalentNodeSerializeDB& talentnodes(int index) const;
  inline ::ChenyuanTypes::TalentNodeSerializeDB* mutable_talentnodes(int index);
  inline ::ChenyuanTypes::TalentNodeSerializeDB* add_talentnodes();
  inline const ::google::protobuf::RepeatedPtrField< ::ChenyuanTypes::TalentNodeSerializeDB >&
      talentnodes() const;
  inline ::google::protobuf::RepeatedPtrField< ::ChenyuanTypes::TalentNodeSerializeDB >*
      mutable_talentnodes();

  // @@protoc_insertion_point(class_scope:ChenyuanTypes.PlayerSerializeDB)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_roleid();
  inline void clear_has_roleid();
  inline void set_has_pos();
  inline void clear_has_pos();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* name_;
  ::ChenyuanTypes::PosSerializeDB* pos_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > spelllist_;
  ::google::protobuf::RepeatedPtrField< ::ChenyuanTypes::TalentNodeSerializeDB > talentnodes_;
  ::google::protobuf::int32 roleid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_proto_2fChenyuanTypes_2eproto();
  friend void protobuf_AssignDesc_proto_2fChenyuanTypes_2eproto();
  friend void protobuf_ShutdownFile_proto_2fChenyuanTypes_2eproto();

  void InitAsDefaultInstance();
  static PlayerSerializeDB* default_instance_;
};
// -------------------------------------------------------------------

class PlayerSerializeNet : public ::google::protobuf::Message {
 public:
  PlayerSerializeNet();
  virtual ~PlayerSerializeNet();

  PlayerSerializeNet(const PlayerSerializeNet& from);

  inline PlayerSerializeNet& operator=(const PlayerSerializeNet& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerSerializeNet& default_instance();

  void Swap(PlayerSerializeNet* other);

  // implements Message ----------------------------------------------

  PlayerSerializeNet* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PlayerSerializeNet& from);
  void MergeFrom(const PlayerSerializeNet& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // required int32 roleid = 2;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleidFieldNumber = 2;
  inline ::google::protobuf::int32 roleid() const;
  inline void set_roleid(::google::protobuf::int32 value);

  // optional .ChenyuanTypes.PosSerializeNet pos = 3;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 3;
  inline const ::ChenyuanTypes::PosSerializeNet& pos() const;
  inline ::ChenyuanTypes::PosSerializeNet* mutable_pos();
  inline ::ChenyuanTypes::PosSerializeNet* release_pos();
  inline void set_allocated_pos(::ChenyuanTypes::PosSerializeNet* pos);

  // repeated int32 spelllist = 4;
  inline int spelllist_size() const;
  inline void clear_spelllist();
  static const int kSpelllistFieldNumber = 4;
  inline ::google::protobuf::int32 spelllist(int index) const;
  inline void set_spelllist(int index, ::google::protobuf::int32 value);
  inline void add_spelllist(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      spelllist() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_spelllist();

  // repeated .ChenyuanTypes.TalentNodeSerializeNet talentnodes = 5;
  inline int talentnodes_size() const;
  inline void clear_talentnodes();
  static const int kTalentnodesFieldNumber = 5;
  inline const ::ChenyuanTypes::TalentNodeSerializeNet& talentnodes(int index) const;
  inline ::ChenyuanTypes::TalentNodeSerializeNet* mutable_talentnodes(int index);
  inline ::ChenyuanTypes::TalentNodeSerializeNet* add_talentnodes();
  inline const ::google::protobuf::RepeatedPtrField< ::ChenyuanTypes::TalentNodeSerializeNet >&
      talentnodes() const;
  inline ::google::protobuf::RepeatedPtrField< ::ChenyuanTypes::TalentNodeSerializeNet >*
      mutable_talentnodes();

  // @@protoc_insertion_point(class_scope:ChenyuanTypes.PlayerSerializeNet)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_roleid();
  inline void clear_has_roleid();
  inline void set_has_pos();
  inline void clear_has_pos();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* name_;
  ::ChenyuanTypes::PosSerializeNet* pos_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > spelllist_;
  ::google::protobuf::RepeatedPtrField< ::ChenyuanTypes::TalentNodeSerializeNet > talentnodes_;
  ::google::protobuf::int32 roleid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_proto_2fChenyuanTypes_2eproto();
  friend void protobuf_AssignDesc_proto_2fChenyuanTypes_2eproto();
  friend void protobuf_ShutdownFile_proto_2fChenyuanTypes_2eproto();

  void InitAsDefaultInstance();
  static PlayerSerializeNet* default_instance_;
};
// -------------------------------------------------------------------

class IntIntSerializeDB : public ::google::protobuf::Message {
 public:
  IntIntSerializeDB();
  virtual ~IntIntSerializeDB();

  IntIntSerializeDB(const IntIntSerializeDB& from);

  inline IntIntSerializeDB& operator=(const IntIntSerializeDB& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IntIntSerializeDB& default_instance();

  void Swap(IntIntSerializeDB* other);

  // implements Message ----------------------------------------------

  IntIntSerializeDB* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IntIntSerializeDB& from);
  void MergeFrom(const IntIntSerializeDB& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 int1 = 1;
  inline bool has_int1() const;
  inline void clear_int1();
  static const int kInt1FieldNumber = 1;
  inline ::google::protobuf::int32 int1() const;
  inline void set_int1(::google::protobuf::int32 value);

  // required int32 int2 = 2;
  inline bool has_int2() const;
  inline void clear_int2();
  static const int kInt2FieldNumber = 2;
  inline ::google::protobuf::int32 int2() const;
  inline void set_int2(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ChenyuanTypes.IntIntSerializeDB)
 private:
  inline void set_has_int1();
  inline void clear_has_int1();
  inline void set_has_int2();
  inline void clear_has_int2();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 int1_;
  ::google::protobuf::int32 int2_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_proto_2fChenyuanTypes_2eproto();
  friend void protobuf_AssignDesc_proto_2fChenyuanTypes_2eproto();
  friend void protobuf_ShutdownFile_proto_2fChenyuanTypes_2eproto();

  void InitAsDefaultInstance();
  static IntIntSerializeDB* default_instance_;
};
// -------------------------------------------------------------------

class IntIntSerializeNet : public ::google::protobuf::Message {
 public:
  IntIntSerializeNet();
  virtual ~IntIntSerializeNet();

  IntIntSerializeNet(const IntIntSerializeNet& from);

  inline IntIntSerializeNet& operator=(const IntIntSerializeNet& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IntIntSerializeNet& default_instance();

  void Swap(IntIntSerializeNet* other);

  // implements Message ----------------------------------------------

  IntIntSerializeNet* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IntIntSerializeNet& from);
  void MergeFrom(const IntIntSerializeNet& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 int1 = 1;
  inline bool has_int1() const;
  inline void clear_int1();
  static const int kInt1FieldNumber = 1;
  inline ::google::protobuf::int32 int1() const;
  inline void set_int1(::google::protobuf::int32 value);

  // required int32 int2 = 2;
  inline bool has_int2() const;
  inline void clear_int2();
  static const int kInt2FieldNumber = 2;
  inline ::google::protobuf::int32 int2() const;
  inline void set_int2(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ChenyuanTypes.IntIntSerializeNet)
 private:
  inline void set_has_int1();
  inline void clear_has_int1();
  inline void set_has_int2();
  inline void clear_has_int2();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 int1_;
  ::google::protobuf::int32 int2_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_proto_2fChenyuanTypes_2eproto();
  friend void protobuf_AssignDesc_proto_2fChenyuanTypes_2eproto();
  friend void protobuf_ShutdownFile_proto_2fChenyuanTypes_2eproto();

  void InitAsDefaultInstance();
  static IntIntSerializeNet* default_instance_;
};
// -------------------------------------------------------------------

class ResourceSerializeDB : public ::google::protobuf::Message {
 public:
  ResourceSerializeDB();
  virtual ~ResourceSerializeDB();

  ResourceSerializeDB(const ResourceSerializeDB& from);

  inline ResourceSerializeDB& operator=(const ResourceSerializeDB& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ResourceSerializeDB& default_instance();

  void Swap(ResourceSerializeDB* other);

  // implements Message ----------------------------------------------

  ResourceSerializeDB* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ResourceSerializeDB& from);
  void MergeFrom(const ResourceSerializeDB& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ChenyuanTypes.ResourceSerializeDB)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_proto_2fChenyuanTypes_2eproto();
  friend void protobuf_AssignDesc_proto_2fChenyuanTypes_2eproto();
  friend void protobuf_ShutdownFile_proto_2fChenyuanTypes_2eproto();

  void InitAsDefaultInstance();
  static ResourceSerializeDB* default_instance_;
};
// -------------------------------------------------------------------

class ResourceSerializeNet : public ::google::protobuf::Message {
 public:
  ResourceSerializeNet();
  virtual ~ResourceSerializeNet();

  ResourceSerializeNet(const ResourceSerializeNet& from);

  inline ResourceSerializeNet& operator=(const ResourceSerializeNet& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ResourceSerializeNet& default_instance();

  void Swap(ResourceSerializeNet* other);

  // implements Message ----------------------------------------------

  ResourceSerializeNet* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ResourceSerializeNet& from);
  void MergeFrom(const ResourceSerializeNet& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // required string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:ChenyuanTypes.ResourceSerializeNet)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* name_;
  ::google::protobuf::int32 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_proto_2fChenyuanTypes_2eproto();
  friend void protobuf_AssignDesc_proto_2fChenyuanTypes_2eproto();
  friend void protobuf_ShutdownFile_proto_2fChenyuanTypes_2eproto();

  void InitAsDefaultInstance();
  static ResourceSerializeNet* default_instance_;
};
// -------------------------------------------------------------------

class ItemSerializeDB : public ::google::protobuf::Message {
 public:
  ItemSerializeDB();
  virtual ~ItemSerializeDB();

  ItemSerializeDB(const ItemSerializeDB& from);

  inline ItemSerializeDB& operator=(const ItemSerializeDB& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ItemSerializeDB& default_instance();

  void Swap(ItemSerializeDB* other);

  // implements Message ----------------------------------------------

  ItemSerializeDB* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ItemSerializeDB& from);
  void MergeFrom(const ItemSerializeDB& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ChenyuanTypes.ItemSerializeDB)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_proto_2fChenyuanTypes_2eproto();
  friend void protobuf_AssignDesc_proto_2fChenyuanTypes_2eproto();
  friend void protobuf_ShutdownFile_proto_2fChenyuanTypes_2eproto();

  void InitAsDefaultInstance();
  static ItemSerializeDB* default_instance_;
};
// -------------------------------------------------------------------

class ItemSerializeNet : public ::google::protobuf::Message {
 public:
  ItemSerializeNet();
  virtual ~ItemSerializeNet();

  ItemSerializeNet(const ItemSerializeNet& from);

  inline ItemSerializeNet& operator=(const ItemSerializeNet& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ItemSerializeNet& default_instance();

  void Swap(ItemSerializeNet* other);

  // implements Message ----------------------------------------------

  ItemSerializeNet* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ItemSerializeNet& from);
  void MergeFrom(const ItemSerializeNet& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // required float price = 2;
  inline bool has_price() const;
  inline void clear_price();
  static const int kPriceFieldNumber = 2;
  inline float price() const;
  inline void set_price(float value);

  // @@protoc_insertion_point(class_scope:ChenyuanTypes.ItemSerializeNet)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_price();
  inline void clear_has_price();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;
  float price_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_proto_2fChenyuanTypes_2eproto();
  friend void protobuf_AssignDesc_proto_2fChenyuanTypes_2eproto();
  friend void protobuf_ShutdownFile_proto_2fChenyuanTypes_2eproto();

  void InitAsDefaultInstance();
  static ItemSerializeNet* default_instance_;
};
// ===================================================================


// ===================================================================

// PosSerializeDB

// required int32 x = 1;
inline bool PosSerializeDB::has_x() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PosSerializeDB::set_has_x() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PosSerializeDB::clear_has_x() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PosSerializeDB::clear_x() {
  x_ = 0;
  clear_has_x();
}
inline ::google::protobuf::int32 PosSerializeDB::x() const {
  return x_;
}
inline void PosSerializeDB::set_x(::google::protobuf::int32 value) {
  set_has_x();
  x_ = value;
}

// required int32 y = 2;
inline bool PosSerializeDB::has_y() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PosSerializeDB::set_has_y() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PosSerializeDB::clear_has_y() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PosSerializeDB::clear_y() {
  y_ = 0;
  clear_has_y();
}
inline ::google::protobuf::int32 PosSerializeDB::y() const {
  return y_;
}
inline void PosSerializeDB::set_y(::google::protobuf::int32 value) {
  set_has_y();
  y_ = value;
}

// -------------------------------------------------------------------

// PosSerializeNet

// required int32 x = 1;
inline bool PosSerializeNet::has_x() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PosSerializeNet::set_has_x() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PosSerializeNet::clear_has_x() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PosSerializeNet::clear_x() {
  x_ = 0;
  clear_has_x();
}
inline ::google::protobuf::int32 PosSerializeNet::x() const {
  return x_;
}
inline void PosSerializeNet::set_x(::google::protobuf::int32 value) {
  set_has_x();
  x_ = value;
}

// required int32 y = 2;
inline bool PosSerializeNet::has_y() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PosSerializeNet::set_has_y() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PosSerializeNet::clear_has_y() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PosSerializeNet::clear_y() {
  y_ = 0;
  clear_has_y();
}
inline ::google::protobuf::int32 PosSerializeNet::y() const {
  return y_;
}
inline void PosSerializeNet::set_y(::google::protobuf::int32 value) {
  set_has_y();
  y_ = value;
}

// -------------------------------------------------------------------

// TalentPropSerializeDB

// required int32 propid = 1;
inline bool TalentPropSerializeDB::has_propid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TalentPropSerializeDB::set_has_propid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TalentPropSerializeDB::clear_has_propid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TalentPropSerializeDB::clear_propid() {
  propid_ = 0;
  clear_has_propid();
}
inline ::google::protobuf::int32 TalentPropSerializeDB::propid() const {
  return propid_;
}
inline void TalentPropSerializeDB::set_propid(::google::protobuf::int32 value) {
  set_has_propid();
  propid_ = value;
}

// required int32 propval = 2;
inline bool TalentPropSerializeDB::has_propval() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TalentPropSerializeDB::set_has_propval() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TalentPropSerializeDB::clear_has_propval() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TalentPropSerializeDB::clear_propval() {
  propval_ = 0;
  clear_has_propval();
}
inline ::google::protobuf::int32 TalentPropSerializeDB::propval() const {
  return propval_;
}
inline void TalentPropSerializeDB::set_propval(::google::protobuf::int32 value) {
  set_has_propval();
  propval_ = value;
}

// required int32 locked = 3;
inline bool TalentPropSerializeDB::has_locked() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TalentPropSerializeDB::set_has_locked() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TalentPropSerializeDB::clear_has_locked() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TalentPropSerializeDB::clear_locked() {
  locked_ = 0;
  clear_has_locked();
}
inline ::google::protobuf::int32 TalentPropSerializeDB::locked() const {
  return locked_;
}
inline void TalentPropSerializeDB::set_locked(::google::protobuf::int32 value) {
  set_has_locked();
  locked_ = value;
}

// -------------------------------------------------------------------

// TalentPropSerializeNet

// required int32 propid = 1;
inline bool TalentPropSerializeNet::has_propid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TalentPropSerializeNet::set_has_propid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TalentPropSerializeNet::clear_has_propid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TalentPropSerializeNet::clear_propid() {
  propid_ = 0;
  clear_has_propid();
}
inline ::google::protobuf::int32 TalentPropSerializeNet::propid() const {
  return propid_;
}
inline void TalentPropSerializeNet::set_propid(::google::protobuf::int32 value) {
  set_has_propid();
  propid_ = value;
}

// required int32 propval = 2;
inline bool TalentPropSerializeNet::has_propval() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TalentPropSerializeNet::set_has_propval() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TalentPropSerializeNet::clear_has_propval() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TalentPropSerializeNet::clear_propval() {
  propval_ = 0;
  clear_has_propval();
}
inline ::google::protobuf::int32 TalentPropSerializeNet::propval() const {
  return propval_;
}
inline void TalentPropSerializeNet::set_propval(::google::protobuf::int32 value) {
  set_has_propval();
  propval_ = value;
}

// required int32 locked = 3;
inline bool TalentPropSerializeNet::has_locked() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TalentPropSerializeNet::set_has_locked() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TalentPropSerializeNet::clear_has_locked() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TalentPropSerializeNet::clear_locked() {
  locked_ = 0;
  clear_has_locked();
}
inline ::google::protobuf::int32 TalentPropSerializeNet::locked() const {
  return locked_;
}
inline void TalentPropSerializeNet::set_locked(::google::protobuf::int32 value) {
  set_has_locked();
  locked_ = value;
}

// -------------------------------------------------------------------

// TalentNodeSerializeDB

// repeated .ChenyuanTypes.TalentPropSerializeDB props = 1;
inline int TalentNodeSerializeDB::props_size() const {
  return props_.size();
}
inline void TalentNodeSerializeDB::clear_props() {
  props_.Clear();
}
inline const ::ChenyuanTypes::TalentPropSerializeDB& TalentNodeSerializeDB::props(int index) const {
  return props_.Get(index);
}
inline ::ChenyuanTypes::TalentPropSerializeDB* TalentNodeSerializeDB::mutable_props(int index) {
  return props_.Mutable(index);
}
inline ::ChenyuanTypes::TalentPropSerializeDB* TalentNodeSerializeDB::add_props() {
  return props_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ChenyuanTypes::TalentPropSerializeDB >&
TalentNodeSerializeDB::props() const {
  return props_;
}
inline ::google::protobuf::RepeatedPtrField< ::ChenyuanTypes::TalentPropSerializeDB >*
TalentNodeSerializeDB::mutable_props() {
  return &props_;
}

// -------------------------------------------------------------------

// TalentNodeSerializeNet

// repeated .ChenyuanTypes.TalentPropSerializeNet props = 1;
inline int TalentNodeSerializeNet::props_size() const {
  return props_.size();
}
inline void TalentNodeSerializeNet::clear_props() {
  props_.Clear();
}
inline const ::ChenyuanTypes::TalentPropSerializeNet& TalentNodeSerializeNet::props(int index) const {
  return props_.Get(index);
}
inline ::ChenyuanTypes::TalentPropSerializeNet* TalentNodeSerializeNet::mutable_props(int index) {
  return props_.Mutable(index);
}
inline ::ChenyuanTypes::TalentPropSerializeNet* TalentNodeSerializeNet::add_props() {
  return props_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ChenyuanTypes::TalentPropSerializeNet >&
TalentNodeSerializeNet::props() const {
  return props_;
}
inline ::google::protobuf::RepeatedPtrField< ::ChenyuanTypes::TalentPropSerializeNet >*
TalentNodeSerializeNet::mutable_props() {
  return &props_;
}

// -------------------------------------------------------------------

// PlayerSerializeDB

// required string name = 1;
inline bool PlayerSerializeDB::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlayerSerializeDB::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PlayerSerializeDB::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PlayerSerializeDB::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& PlayerSerializeDB::name() const {
  return *name_;
}
inline void PlayerSerializeDB::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void PlayerSerializeDB::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void PlayerSerializeDB::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PlayerSerializeDB::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* PlayerSerializeDB::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void PlayerSerializeDB::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required int32 roleid = 2;
inline bool PlayerSerializeDB::has_roleid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PlayerSerializeDB::set_has_roleid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PlayerSerializeDB::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PlayerSerializeDB::clear_roleid() {
  roleid_ = 0;
  clear_has_roleid();
}
inline ::google::protobuf::int32 PlayerSerializeDB::roleid() const {
  return roleid_;
}
inline void PlayerSerializeDB::set_roleid(::google::protobuf::int32 value) {
  set_has_roleid();
  roleid_ = value;
}

// optional .ChenyuanTypes.PosSerializeDB pos = 3;
inline bool PlayerSerializeDB::has_pos() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PlayerSerializeDB::set_has_pos() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PlayerSerializeDB::clear_has_pos() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PlayerSerializeDB::clear_pos() {
  if (pos_ != NULL) pos_->::ChenyuanTypes::PosSerializeDB::Clear();
  clear_has_pos();
}
inline const ::ChenyuanTypes::PosSerializeDB& PlayerSerializeDB::pos() const {
  return pos_ != NULL ? *pos_ : *default_instance_->pos_;
}
inline ::ChenyuanTypes::PosSerializeDB* PlayerSerializeDB::mutable_pos() {
  set_has_pos();
  if (pos_ == NULL) pos_ = new ::ChenyuanTypes::PosSerializeDB;
  return pos_;
}
inline ::ChenyuanTypes::PosSerializeDB* PlayerSerializeDB::release_pos() {
  clear_has_pos();
  ::ChenyuanTypes::PosSerializeDB* temp = pos_;
  pos_ = NULL;
  return temp;
}
inline void PlayerSerializeDB::set_allocated_pos(::ChenyuanTypes::PosSerializeDB* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    set_has_pos();
  } else {
    clear_has_pos();
  }
}

// repeated int32 spelllist = 4;
inline int PlayerSerializeDB::spelllist_size() const {
  return spelllist_.size();
}
inline void PlayerSerializeDB::clear_spelllist() {
  spelllist_.Clear();
}
inline ::google::protobuf::int32 PlayerSerializeDB::spelllist(int index) const {
  return spelllist_.Get(index);
}
inline void PlayerSerializeDB::set_spelllist(int index, ::google::protobuf::int32 value) {
  spelllist_.Set(index, value);
}
inline void PlayerSerializeDB::add_spelllist(::google::protobuf::int32 value) {
  spelllist_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
PlayerSerializeDB::spelllist() const {
  return spelllist_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
PlayerSerializeDB::mutable_spelllist() {
  return &spelllist_;
}

// repeated .ChenyuanTypes.TalentNodeSerializeDB talentnodes = 5;
inline int PlayerSerializeDB::talentnodes_size() const {
  return talentnodes_.size();
}
inline void PlayerSerializeDB::clear_talentnodes() {
  talentnodes_.Clear();
}
inline const ::ChenyuanTypes::TalentNodeSerializeDB& PlayerSerializeDB::talentnodes(int index) const {
  return talentnodes_.Get(index);
}
inline ::ChenyuanTypes::TalentNodeSerializeDB* PlayerSerializeDB::mutable_talentnodes(int index) {
  return talentnodes_.Mutable(index);
}
inline ::ChenyuanTypes::TalentNodeSerializeDB* PlayerSerializeDB::add_talentnodes() {
  return talentnodes_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ChenyuanTypes::TalentNodeSerializeDB >&
PlayerSerializeDB::talentnodes() const {
  return talentnodes_;
}
inline ::google::protobuf::RepeatedPtrField< ::ChenyuanTypes::TalentNodeSerializeDB >*
PlayerSerializeDB::mutable_talentnodes() {
  return &talentnodes_;
}

// -------------------------------------------------------------------

// PlayerSerializeNet

// required string name = 1;
inline bool PlayerSerializeNet::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlayerSerializeNet::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PlayerSerializeNet::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PlayerSerializeNet::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& PlayerSerializeNet::name() const {
  return *name_;
}
inline void PlayerSerializeNet::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void PlayerSerializeNet::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void PlayerSerializeNet::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PlayerSerializeNet::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* PlayerSerializeNet::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void PlayerSerializeNet::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required int32 roleid = 2;
inline bool PlayerSerializeNet::has_roleid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PlayerSerializeNet::set_has_roleid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PlayerSerializeNet::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PlayerSerializeNet::clear_roleid() {
  roleid_ = 0;
  clear_has_roleid();
}
inline ::google::protobuf::int32 PlayerSerializeNet::roleid() const {
  return roleid_;
}
inline void PlayerSerializeNet::set_roleid(::google::protobuf::int32 value) {
  set_has_roleid();
  roleid_ = value;
}

// optional .ChenyuanTypes.PosSerializeNet pos = 3;
inline bool PlayerSerializeNet::has_pos() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PlayerSerializeNet::set_has_pos() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PlayerSerializeNet::clear_has_pos() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PlayerSerializeNet::clear_pos() {
  if (pos_ != NULL) pos_->::ChenyuanTypes::PosSerializeNet::Clear();
  clear_has_pos();
}
inline const ::ChenyuanTypes::PosSerializeNet& PlayerSerializeNet::pos() const {
  return pos_ != NULL ? *pos_ : *default_instance_->pos_;
}
inline ::ChenyuanTypes::PosSerializeNet* PlayerSerializeNet::mutable_pos() {
  set_has_pos();
  if (pos_ == NULL) pos_ = new ::ChenyuanTypes::PosSerializeNet;
  return pos_;
}
inline ::ChenyuanTypes::PosSerializeNet* PlayerSerializeNet::release_pos() {
  clear_has_pos();
  ::ChenyuanTypes::PosSerializeNet* temp = pos_;
  pos_ = NULL;
  return temp;
}
inline void PlayerSerializeNet::set_allocated_pos(::ChenyuanTypes::PosSerializeNet* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    set_has_pos();
  } else {
    clear_has_pos();
  }
}

// repeated int32 spelllist = 4;
inline int PlayerSerializeNet::spelllist_size() const {
  return spelllist_.size();
}
inline void PlayerSerializeNet::clear_spelllist() {
  spelllist_.Clear();
}
inline ::google::protobuf::int32 PlayerSerializeNet::spelllist(int index) const {
  return spelllist_.Get(index);
}
inline void PlayerSerializeNet::set_spelllist(int index, ::google::protobuf::int32 value) {
  spelllist_.Set(index, value);
}
inline void PlayerSerializeNet::add_spelllist(::google::protobuf::int32 value) {
  spelllist_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
PlayerSerializeNet::spelllist() const {
  return spelllist_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
PlayerSerializeNet::mutable_spelllist() {
  return &spelllist_;
}

// repeated .ChenyuanTypes.TalentNodeSerializeNet talentnodes = 5;
inline int PlayerSerializeNet::talentnodes_size() const {
  return talentnodes_.size();
}
inline void PlayerSerializeNet::clear_talentnodes() {
  talentnodes_.Clear();
}
inline const ::ChenyuanTypes::TalentNodeSerializeNet& PlayerSerializeNet::talentnodes(int index) const {
  return talentnodes_.Get(index);
}
inline ::ChenyuanTypes::TalentNodeSerializeNet* PlayerSerializeNet::mutable_talentnodes(int index) {
  return talentnodes_.Mutable(index);
}
inline ::ChenyuanTypes::TalentNodeSerializeNet* PlayerSerializeNet::add_talentnodes() {
  return talentnodes_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ChenyuanTypes::TalentNodeSerializeNet >&
PlayerSerializeNet::talentnodes() const {
  return talentnodes_;
}
inline ::google::protobuf::RepeatedPtrField< ::ChenyuanTypes::TalentNodeSerializeNet >*
PlayerSerializeNet::mutable_talentnodes() {
  return &talentnodes_;
}

// -------------------------------------------------------------------

// IntIntSerializeDB

// required int32 int1 = 1;
inline bool IntIntSerializeDB::has_int1() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IntIntSerializeDB::set_has_int1() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IntIntSerializeDB::clear_has_int1() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IntIntSerializeDB::clear_int1() {
  int1_ = 0;
  clear_has_int1();
}
inline ::google::protobuf::int32 IntIntSerializeDB::int1() const {
  return int1_;
}
inline void IntIntSerializeDB::set_int1(::google::protobuf::int32 value) {
  set_has_int1();
  int1_ = value;
}

// required int32 int2 = 2;
inline bool IntIntSerializeDB::has_int2() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IntIntSerializeDB::set_has_int2() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IntIntSerializeDB::clear_has_int2() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IntIntSerializeDB::clear_int2() {
  int2_ = 0;
  clear_has_int2();
}
inline ::google::protobuf::int32 IntIntSerializeDB::int2() const {
  return int2_;
}
inline void IntIntSerializeDB::set_int2(::google::protobuf::int32 value) {
  set_has_int2();
  int2_ = value;
}

// -------------------------------------------------------------------

// IntIntSerializeNet

// required int32 int1 = 1;
inline bool IntIntSerializeNet::has_int1() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IntIntSerializeNet::set_has_int1() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IntIntSerializeNet::clear_has_int1() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IntIntSerializeNet::clear_int1() {
  int1_ = 0;
  clear_has_int1();
}
inline ::google::protobuf::int32 IntIntSerializeNet::int1() const {
  return int1_;
}
inline void IntIntSerializeNet::set_int1(::google::protobuf::int32 value) {
  set_has_int1();
  int1_ = value;
}

// required int32 int2 = 2;
inline bool IntIntSerializeNet::has_int2() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IntIntSerializeNet::set_has_int2() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IntIntSerializeNet::clear_has_int2() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IntIntSerializeNet::clear_int2() {
  int2_ = 0;
  clear_has_int2();
}
inline ::google::protobuf::int32 IntIntSerializeNet::int2() const {
  return int2_;
}
inline void IntIntSerializeNet::set_int2(::google::protobuf::int32 value) {
  set_has_int2();
  int2_ = value;
}

// -------------------------------------------------------------------

// ResourceSerializeDB

// required int32 id = 1;
inline bool ResourceSerializeDB::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ResourceSerializeDB::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ResourceSerializeDB::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ResourceSerializeDB::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 ResourceSerializeDB::id() const {
  return id_;
}
inline void ResourceSerializeDB::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// -------------------------------------------------------------------

// ResourceSerializeNet

// required int32 id = 1;
inline bool ResourceSerializeNet::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ResourceSerializeNet::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ResourceSerializeNet::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ResourceSerializeNet::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 ResourceSerializeNet::id() const {
  return id_;
}
inline void ResourceSerializeNet::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// required string name = 2;
inline bool ResourceSerializeNet::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ResourceSerializeNet::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ResourceSerializeNet::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ResourceSerializeNet::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& ResourceSerializeNet::name() const {
  return *name_;
}
inline void ResourceSerializeNet::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void ResourceSerializeNet::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void ResourceSerializeNet::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ResourceSerializeNet::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* ResourceSerializeNet::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void ResourceSerializeNet::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// ItemSerializeDB

// required int32 id = 1;
inline bool ItemSerializeDB::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ItemSerializeDB::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ItemSerializeDB::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ItemSerializeDB::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 ItemSerializeDB::id() const {
  return id_;
}
inline void ItemSerializeDB::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// -------------------------------------------------------------------

// ItemSerializeNet

// required int32 id = 1;
inline bool ItemSerializeNet::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ItemSerializeNet::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ItemSerializeNet::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ItemSerializeNet::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 ItemSerializeNet::id() const {
  return id_;
}
inline void ItemSerializeNet::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// required float price = 2;
inline bool ItemSerializeNet::has_price() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ItemSerializeNet::set_has_price() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ItemSerializeNet::clear_has_price() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ItemSerializeNet::clear_price() {
  price_ = 0;
  clear_has_price();
}
inline float ItemSerializeNet::price() const {
  return price_;
}
inline void ItemSerializeNet::set_price(float value) {
  set_has_price();
  price_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace ChenyuanTypes

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_proto_2fChenyuanTypes_2eproto__INCLUDED
